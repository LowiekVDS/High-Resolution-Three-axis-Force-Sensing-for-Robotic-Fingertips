<?xml version='1.0' encoding='UTF-8'?>
<root>
 <tabbed_widget name="Main Window" parent="main_window">
  <Tab containers="1" tab_name="tab1">
   <Container>
    <DockSplitter orientation="-" count="3" sizes="0.333002;0.333996;0.333002">
     <DockArea name="...">
      <plot mode="TimeSeries" flip_x="false" flip_y="false" style="Lines">
       <range left="0.000000" right="1.000000" bottom="-0.100000" top="0.100000"/>
       <limitY/>
      </plot>
     </DockArea>
     <DockArea name="...">
      <plot mode="TimeSeries" flip_x="false" flip_y="false" style="Lines">
       <range left="0.000000" right="1.000000" bottom="-0.100000" top="0.100000"/>
       <limitY/>
      </plot>
     </DockArea>
     <DockArea name="...">
      <plot mode="TimeSeries" flip_x="false" flip_y="false" style="Lines">
       <range left="0.000000" right="1.000000" bottom="-0.100000" top="0.100000"/>
       <limitY/>
      </plot>
     </DockArea>
    </DockSplitter>
   </Container>
  </Tab>
  <Tab containers="1" tab_name="tab2">
   <Container>
    <DockSplitter orientation="-" count="4" sizes="0.249751;0.250746;0.249751;0.249751">
     <DockArea name="...">
      <plot mode="TimeSeries" flip_x="false" flip_y="false" style="Lines">
       <range left="0.000000" right="0.000000" bottom="-0.100000" top="0.100000"/>
       <limitY/>
      </plot>
     </DockArea>
     <DockArea name="...">
      <plot mode="TimeSeries" flip_x="false" flip_y="false" style="Lines">
       <range left="0.000000" right="0.000000" bottom="-0.100000" top="0.100000"/>
       <limitY/>
      </plot>
     </DockArea>
     <DockArea name="...">
      <plot mode="TimeSeries" flip_x="false" flip_y="false" style="Lines">
       <range left="0.000000" right="0.000000" bottom="-0.100000" top="0.100000"/>
       <limitY/>
      </plot>
     </DockArea>
     <DockArea name="...">
      <plot mode="TimeSeries" flip_x="false" flip_y="false" style="Lines">
       <range left="0.000000" right="0.000000" bottom="-0.100000" top="0.100000"/>
       <limitY/>
      </plot>
     </DockArea>
    </DockSplitter>
   </Container>
  </Tab>
  <Tab containers="1" tab_name="tab3">
   <Container>
    <DockSplitter orientation="-" count="3" sizes="0.333002;0.333996;0.333002">
     <DockArea name="...">
      <plot mode="TimeSeries" flip_x="false" flip_y="false" style="Lines">
       <range left="15.004625" right="26.200717" bottom="-4.651956" top="3.519510"/>
       <limitY/>
       <curve name="F_x0" color="#040404"/>
       <curve name="F_x1" color="#482628"/>
       <curve name="F_x2" color="#2f1916"/>
       <curve name="F_x3" color="#302020"/>
       <curve name="F_x [N]" color="#c91a25"/>
       <curve name="F_xest" color="#4922bd"/>
      </plot>
     </DockArea>
     <DockArea name="...">
      <plot mode="TimeSeries" flip_x="false" flip_y="false" style="Lines">
       <range left="15.004625" right="26.200717" bottom="-5.381460" top="6.282359"/>
       <limitY/>
       <curve name="F_y0" color="#170908"/>
       <curve name="F_y1" color="#281917"/>
       <curve name="F_y2" color="#260a0a"/>
       <curve name="F_y3" color="#201110"/>
       <curve name="F_y [N]" color="#ff2d0e"/>
       <curve name="F_yest" color="#171ccf"/>
      </plot>
     </DockArea>
     <DockArea name="...">
      <plot mode="TimeSeries" flip_x="false" flip_y="false" style="Lines">
       <range left="15.004625" right="26.200717" bottom="-10.685057" top="0.561598"/>
       <limitY/>
       <curve name="F_z0" color="#302727"/>
       <curve name="F_z1" color="#251514"/>
       <curve name="F_z2" color="#251817"/>
       <curve name="F_z3" color="#271110"/>
       <curve name="F_z [N]" color="#e11624"/>
       <curve name="F_zest" color="#252bee"/>
      </plot>
     </DockArea>
    </DockSplitter>
   </Container>
  </Tab>
  <currentTabIndex index="2"/>
 </tabbed_widget>
 <use_relative_time_offset enabled="1"/>
 <!-- - - - - - - - - - - - - - - -->
 <!-- - - - - - - - - - - - - - - -->
 <Plugins>
  <plugin ID="DataLoad CSV">
   <default time_axis="t_wall [s]" delimiter="0"/>
  </plugin>
  <plugin ID="DataLoad MCAP"/>
  <plugin ID="DataLoad ROS bags">
   <use_header_stamp value="false"/>
   <discard_large_arrays value="true"/>
   <max_array_size value="100"/>
   <boolean_strings_to_number value="true"/>
   <remove_suffix_from_strings value="true"/>
  </plugin>
  <plugin ID="DataLoad ULog"/>
  <plugin ID="MQTT Subscriber (Mosquitto)"/>
  <plugin ID="ROS Topic Subscriber">
   <use_header_stamp value="false"/>
   <discard_large_arrays value="true"/>
   <max_array_size value="100"/>
   <boolean_strings_to_number value="true"/>
   <remove_suffix_from_strings value="true"/>
  </plugin>
  <plugin ID="UDP Server"/>
  <plugin ID="WebSocket Server"/>
  <plugin ID="ZMQ Subscriber"/>
  <plugin ID="Fast Fourier Transform"/>
  <plugin ID="Quaternion to RPY"/>
  <plugin ID="Reactive Script Editor">
   <library code="--[[ Helper function to create a series from arrays&#xa;&#xa; new_series: a series previously created with ScatterXY.new(name)&#xa; prefix:     prefix of the timeseries, before the index of the array&#xa; suffix_X:   suffix to complete the name of the series containing the X value. If [nil], use the index of the array.&#xa; suffix_Y:   suffix to complete the name of the series containing the Y value&#xa; timestamp:   usually the tracker_time variable&#xa;              &#xa; Example:&#xa; &#xa; Assuming we have multiple series in the form:&#xa; &#xa;   /trajectory/node.{X}/position/x&#xa;   /trajectory/node.{X}/position/y&#xa;   &#xa; where {N} is the index of the array (integer). We can create a reactive series from the array with:&#xa; &#xa;   new_series = ScatterXY.new(&quot;my_trajectory&quot;) &#xa;   CreateSeriesFromArray( new_series, &quot;/trajectory/node&quot;, &quot;position/x&quot;, &quot;position/y&quot;, tracker_time );&#xa;--]]&#xa;&#xa;function CreateSeriesFromArray( new_series, prefix, suffix_X, suffix_Y, timestamp )&#xa;  &#xa;  --- clear previous values&#xa;  new_series:clear()&#xa;  &#xa;  --- Append points to new_series&#xa;  index = 0&#xa;  while(true) do&#xa;&#xa;    x = index;&#xa;    -- if not nil, get the X coordinate from a series&#xa;    if suffix_X ~= nil then &#xa;      series_x = TimeseriesView.find( string.format( &quot;%s.%d/%s&quot;, prefix, index, suffix_X) )&#xa;      if series_x == nil then break end&#xa;      x = series_x:atTime(timestamp)&#x9; &#xa;    end&#xa;    &#xa;    series_y = TimeseriesView.find( string.format( &quot;%s.%d/%s&quot;, prefix, index, suffix_Y) )&#xa;    if series_y == nil then break end &#xa;    y = series_y:atTime(timestamp)&#xa;    &#xa;    new_series:push_back(x,y)&#xa;    index = index+1&#xa;  end&#xa;end&#xa;&#xa;--[[ Similar to the built-in function GetSeriesNames(), but select only the names with a give prefix. --]]&#xa;&#xa;function GetSeriesNamesByPrefix(prefix)&#xa;  -- GetSeriesNames(9 is a built-in function&#xa;  all_names = GetSeriesNames()&#xa;  filtered_names = {}&#xa;  for i, name in ipairs(all_names)  do&#xa;    -- check the prefix&#xa;    if name:find(prefix, 1, #prefix) then&#xa;      table.insert(filtered_names, name);&#xa;    end&#xa;  end&#xa;  return filtered_names&#xa;end&#xa;&#xa;--[[ Modify an existing series, applying offsets to all their X and Y values&#xa;&#xa; series: an existing timeseries, obtained with TimeseriesView.find(name)&#xa; delta_x: offset to apply to each x value&#xa; delta_y: offset to apply to each y value &#xa;  &#xa;--]]&#xa;&#xa;function ApplyOffsetInPlace(series, delta_x, delta_y)&#xa;  -- use C++ indeces, not Lua indeces&#xa;  for index=0, series:size()-1 do&#xa;    x,y = series:at(index)&#xa;    series:set(index, x + delta_x, y + delta_y)&#xa;  end&#xa;end&#xa;"/>
   <scripts/>
  </plugin>
  <plugin ID="CSV Exporter"/>
  <plugin ID="ROS /rosout Visualization"/>
  <plugin ID="ROS Topic Re-Publisher"/>
 </Plugins>
 <!-- - - - - - - - - - - - - - - -->
 <!-- - - - - - - - - - - - - - - -->
 <customMathEquations>
  <snippet name="F_xest">
   <global></global>
   <function>return v1 + v2 + v3 + v4</function>
   <linked_source>F_x0</linked_source>
   <additional_sources>
    <v1>F_x0</v1>
    <v2>F_x1</v2>
    <v3>F_x2</v3>
    <v4>F_x3</v4>
   </additional_sources>
  </snippet>
  <snippet name="F_yest">
   <global></global>
   <function>return v1 + v2 + v3 + v4</function>
   <linked_source>F_y0</linked_source>
   <additional_sources>
    <v1>F_y0</v1>
    <v2>F_y1</v2>
    <v3>F_y2</v3>
    <v4>F_y3</v4>
   </additional_sources>
  </snippet>
  <snippet name="F_zest">
   <global></global>
   <function>return v1 + v2 + v3 + v4</function>
   <linked_source>F_z0</linked_source>
   <additional_sources>
    <v1>F_z0</v1>
    <v2>F_z1</v2>
    <v3>F_z2</v3>
    <v4>F_z3</v4>
   </additional_sources>
  </snippet>
 </customMathEquations>
 <snippets/>
 <!-- - - - - - - - - - - - - - - -->
</root>

